<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
<<<<<<< HEAD
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
=======
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
>>>>>>>  adding pom.xml and beans.xml
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">


<!-- Tell spring to search for @s like @autowired ...among other things-->
<context:component-scan base-package="com.revature"></context:component-scan>

<<<<<<< HEAD
<!-- turn on aop -->
<aop:aspectj-autoproxy/>
=======


>>>>>>>  adding pom.xml and beans.xml


<!-- Tell Spring we are using a transactionManager and to scan for the @s of it -
		@Transactional -->
<tx:annotation-driven/>


<<<<<<< HEAD
=======



>>>>>>>  adding pom.xml and beans.xml
<!-- 1st supply you DataSource: basic JDBC information -->
<bean id="myDataSource" class="org.apache.commons.dbcp.BasicDataSource">
	<!-- Setter DI of Username, Pw, URL, Driver -->
	<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"></property>
<<<<<<< HEAD
		<property name="username" value="jello"> </property>
		<property name="password" value="p4ssw0rd"> </property>
=======
		<property name="username" value=""></property>
		<property name="password" value=""></property>
>>>>>>>  adding pom.xml and beans.xml
		<property name="url" value="jdbc:oracle:thin:@Localhost:1521:xe"></property>
	
</bean>


<<<<<<< HEAD
=======

>>>>>>>  adding pom.xml and beans.xml
<!-- Now Give that DataSourceobject to the SessionFactory -->
	<bean id="mySessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">



<<<<<<< HEAD
=======


>>>>>>>  adding pom.xml and beans.xml
<!-- Inject the DataSource bean -->
	<property name="dataSource" ref="myDataSource"></property>



<<<<<<< HEAD
<!-- Now supply the rest of the Hibernate properties -->
	<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2dll">update</prop>
			</props>
	</property>


=======



<!-- Now supply the rest of the Hibernate properties -->
	<property name="hibernateProperties">
					<props>
						<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
						<prop key="hibernate.show_sql">true</prop>
						<prop key="hibernate.hbm2dll">update</prop>
					</props>
	</property>



>>>>>>>  adding pom.xml and beans.xml
<!-- scans for JPA -->
	<property name="packagesToScan" value="com.revature.pojo" />
	</bean>



<!-- create a transaction manager and give the sessionfactory -->
<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
	<property name="sessionFactory" ref="mySessionFactory"></property>
</bean>

<<<<<<< HEAD
<!-- This is allowing spring to figure out our object dependencies
    		using the auto-wire attribute -->
<!--  <bean class="com.revature.service.AppService" id="service" autowire="byName"></bean> --> 
=======

>>>>>>>  adding pom.xml and beans.xml


</beans>
